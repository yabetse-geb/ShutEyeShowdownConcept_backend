// This file is auto-generated by the `generate_imports.ts` script.
// Do not edit it manually, unless you know your concept requires a custom instantiation procedure.

import { SyncConcept } from "@engine";

export const Engine = new SyncConcept();

import { testDb } from "@utils/database.ts";

import AccountabilityConcept from "./Accountability/AccountabilityConcept.ts";
import CompetitionManagerConcept from "./CompetitionManager/CompetitionManagerConcept.ts";
import PasswordAuthConcept from "./PasswordAuth/PasswordAuthConcept.ts";
import RequestingConcept from "./Requesting/RequestingConcept.ts";
import SleepScheduleConcept from "./SleepSchedule/SleepScheduleConcept.ts";

export type { default as AccountabilityConcept } from "./Accountability/AccountabilityConcept.ts";
export type { default as CompetitionManagerConcept } from "./CompetitionManager/CompetitionManagerConcept.ts";
export type { default as PasswordAuthConcept } from "./PasswordAuth/PasswordAuthConcept.ts";
export type { default as RequestingConcept } from "./Requesting/RequestingConcept.ts";
export type { default as SleepScheduleConcept } from "./SleepSchedule/SleepScheduleConcept.ts";

// Initialize the database connection
export const [db, client] = await testDb();

export const Accountability = Engine.instrumentConcept(new AccountabilityConcept(db));
export const CompetitionManager = Engine.instrumentConcept(new CompetitionManagerConcept(db));
export const PasswordAuth = Engine.instrumentConcept(new PasswordAuthConcept(db));
export const Requesting = Engine.instrumentConcept(new RequestingConcept(db));
export const SleepSchedule = Engine.instrumentConcept(new SleepScheduleConcept(db));
